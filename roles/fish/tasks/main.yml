---
- name: Install fish shell package
  become: true
  ansible.builtin.apt:
    name:
      - fish
    state: present

- name: Create all fish related folders
  ansible.builtin.file:
    path: "{{ xdg_config_home }}/fish/{{ item.path }}"
    state: directory
    mode: "0755"
  with_community.general.filetree: "../templates"
  when: item.state == 'directory'

- name: Copy fish user config files
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ xdg_config_home }}/fish/{{ item.path | replace('.j2', '') }}"
    mode: "0644"
  with_community.general.filetree: "../templates"
  when: item.state == 'file'

- name: Adding the configuration for the private share
  become: true
  ansible.builtin.blockinfile:
    marker: "# {mark} Use interactive shell"
    path: $HOME/.bashrc
    insertafter: EOF
    block: |
      fish
    backup: true

- name: Fetch starship
  ansible.builtin.uri:
    url: https://starship.rs/install.sh
    return_content: true
  register: starship_installer

- name: Run starship installer
  become: true
  ansible.builtin.command:
    cmd: sh -s -- -y
    stdin: "{{ starship_installer.content }}"
  register: starship_installed
  changed_when: starship_installed.rc != 0

- name: Download fisher script
  ansible.builtin.uri:
    url: https://raw.githubusercontent.com/jorgebucaran/fisher/main/functions/fisher.fish
    return_content: true
  register: fisher_installer

- name: Install fisher # noqa: no-changed-when
  ansible.builtin.shell:
    cmd: source -- && fisher install jorgebucaran/fisher
    stdin: "{{ fisher_installer.content }}"
    executable: /usr/bin/fish

- name: Install fish modules # noqa: no-changed-when
  ansible.builtin.shell: fisher install {{ item }}
  args:
    executable: /usr/bin/fish
  with_items: "{{ fish.modules }}"
