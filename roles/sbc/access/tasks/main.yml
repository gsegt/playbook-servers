---
- name: Check if system is a Single Board Computer
  ansible.builtin.fail:
    msg: The system is not a Single Board Computer!
  when: inventory_hostname in groups['sbc']

- name: Install hostapd and rfkill
  become: true
  ansible.builtin.apt:
    name:
      - hostapd
      - rfkill

- name: Enable and unmask global hostap.conf service
  become: true
  ansible.builtin.systemd:
    name: hostapd
    enabled: true
    masked: false

- name: Create netdev file
  become: true
  ansible.builtin.blockinfile:
    path: /etc/systemd/network/bridge-{{ acess.bridge_interface }}.netdev
    insertafter: EOF
    block: |
      [NetDev]
      Name={{ acess.bridge_interface }}
      Kind=bridge
    create: true
    mode: "0644"

- name: Create network file
  become: true
  ansible.builtin.blockinfile:
    path: /etc/systemd/network/{{ acess.bridge_interface }}-member-{{ ethernet_interface }}.network
    insertafter: EOF
    block: |
      [Match]
      Name={{ acess.ethernet_interface }}
      [Network]
      Bridge={{ acess.bridge_interface }}
    create: true
    mode: "0644"

- name: Enable global systemd-networkd service
  become: true
  ansible.builtin.systemd:
    name: systemd-networkd
    enabled: true
    masked: false

- name: Update dhcp.conf
  become: true
  ansible.builtin.blockinfile:
    path: /etc/dhcpcd.conf
    insertafter: EOF
    block: |
      denyinterfaces {{ access.wireless.interface }} {{ access.ethernet_interface }}
      interface {{ access.bridge_interface }}
    create: true
    mode: "0644"

- name: Unblock wifi
  become: true
  ansible.builtin.command: rfkill unblock wlan
  register: wifi_disabled
  changed_when: wifi_disabled.rc != 0

- name: Copy hostapd.conf
  become: true
  ansible.builtin.template:
    src: hostapd.conf.j2
    dest: /etc/hostapd/hostapd.conf
    mode: "0644"
  notify: Reboot

- name: Allow all handlers to run
  ansible.builtin.meta: flush_handlers
