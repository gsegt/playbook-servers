---
- name: Create data volune for Docker Image Update Notifier (DIUN)
  community.docker.docker_volume:
    name: diun-data

- name: Find all files named Dockerfile in /opt/docker
  ansible.builtin.find:
    paths: /opt/docker
    recurse: true
    patterns: "*Dockerfile"
  register: dockerfiles

- name: Initialize DIUN volumes list
  ansible.builtin.set_fact:
    diun_volumes:
      - diun-data:/data
      - /var/run/docker.sock:/var/run/docker.sock

- name: Append dockerfile paths to DIUN volumes
  ansible.builtin.set_fact:
    diun_volumes: "{{ diun_volumes + [item.path + ':/dockerfiles/' + item.path + ':ro'] }}"
  loop: "{{ dockerfiles.files }}"
  loop_control:
    label: "{{ item.path }}"

- name: Setup DIUN
  community.docker.docker_container:
    name: diun
    image: ghcr.io/crazy-max/diun
    env:
      TZ: "{{ timezone }}"
      DIUN_WATCH_SCHEDULE: "{{ diun.schedule }}"
      DIUN_NOTIF_MAIL_HOST: "{{ vault_email.smtp.host }}"
      DIUN_NOTIF_MAIL_PORT: "{{ vault_email.smtp.startls }}"
      DIUN_NOTIF_MAIL_SSL: "false" # Uses STARTTLS
      DIUN_NOTIF_MAIL_USERNAME: "{{ vault_email.user }}"
      DIUN_NOTIF_MAIL_PASSWORD: "{{ vault_email.password }}"
      DIUN_NOTIF_MAIL_FROM: "{{ vault_email.from }}"
      DIUN_NOTIF_MAIL_TO: "{{ vault_email.to }}"
      DIUN_PROVIDERS_DOCKER: "true"
      DIUN_PROVIDERS_DOCKERFILE_PATTERNS: "/dockerfiles/**/Dockerfile"
      DIUN_PROVIDERS_DOCKER_WATCHBYDEFAULT: "true"
    volumes: "{{ diun_volumes }}"
    restart_policy: unless-stopped
    pull: always
